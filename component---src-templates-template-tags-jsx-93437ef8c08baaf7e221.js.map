{"version":3,"file":"component---src-templates-template-tags-jsx-93437ef8c08baaf7e221.js","mappings":"+KAoDA,UA5Ca,IAA4B,IAA3B,YAAEA,EAAW,KAAEC,GAAM,EACjC,MAAM,IAAEC,GAAQF,GACV,MAAEG,GAAUF,EAAKG,kBAKvB,OACE,gBAAC,IAAM,KACL,4BACE,uBAAKC,UAAU,yCACZJ,EAAKG,kBAAkBD,MAAMG,KAAI,QAAC,KAAEC,GAAM,SACzC,gBAAC,IAAW,CAACN,KAAMM,EAAMC,IAAKD,EAAKE,OAAOC,MAAQ,MAKjD,C","sources":["webpack://santitfg.github.io/./src/templates/template-tags.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CardPreview from \"../components/cardpreview\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n  // const tagHeader = `${totalCount} post${\n  //   totalCount === 1 ? \"\" : \"s\"\n  // } tagged with \"${tag}\"`\n\n  return (\n    <Layout >\n      <main>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <CardPreview data={node} key={node.fields.slug} />\n          ))}\n        </div>\n        </main>\n        {/* <Link to=\"/tags\">All tags</Link> */}\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            layout\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","data","tag","edges","allMarkdownRemark","className","map","node","key","fields","slug"],"sourceRoot":""}