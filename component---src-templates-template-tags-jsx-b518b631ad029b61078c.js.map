{"version":3,"file":"component---src-templates-template-tags-jsx-b518b631ad029b61078c.js","mappings":"+JA6CA,IAxCqBA,IACnB,MAAM,KAAEC,GAASD,EACjB,IAAIE,OAASC,EAgBb,OAdIF,EAAKG,YAAYC,QAGnBH,EAEE,gBAAC,EAAAI,EAAW,CACVC,UAAU,oDACVF,MAAOJ,EAAKG,YAAYC,MAAMG,gBAAgBC,gBAC9CC,IAAKT,EAAKG,YAAYO,SAO1B,uBAAKJ,UAAU,mDACb,gBAAC,EAAAK,KAAI,CAACC,GAAIZ,EAAKa,OAAOC,KAAMR,UAAU,KAEpC,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,wEAEb,uBAAKA,UAAU,yHAEZN,EAAKG,YAAYO,QAGrBT,IAMD,C,yECUV,UA3Ca,IAA4B,IAA3B,YAAEc,EAAW,KAAEf,GAAM,EACjC,MAAM,IAAEgB,GAAQD,GACV,MAAEE,GAAUjB,EAAKkB,kBAKvB,OACE,gBAAC,IAAM,CAACC,OAAQH,GACZ,uBAAKV,UAAU,yCACZN,EAAKkB,kBAAkBD,MAAMG,KAAI,QAAC,KAAEC,GAAM,SACzC,gBAAC,IAAW,CAACrB,KAAMqB,EAAMC,IAAKD,EAAKR,OAAOC,MAAQ,KAKjD,C","sources":["webpack://santitfg.github.io/./src/components/cardpreview.jsx","webpack://santitfg.github.io/./src/templates/template-tags.jsx"],"sourcesContent":["// import { StaticImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nconst CardPreview = (props) => {\n  const { data } = props;\n  var imagen = undefined;\n\n  if (data.frontmatter.image) {\n    //esto por ahi es un poco rebuscado y podria hacer uan ternaria pero me parece que lo vuelve poco legible\n\n    imagen = (\n      // <div      className=\"relative object-cover pb-1/2 \"      >\n      <GatsbyImage\n        className=\" absolute w-full h-full object-cover rounded-3xl \"\n        image={data.frontmatter.image.childImageSharp.gatsbyImageData}\n        alt={data.frontmatter.title}\n      />\n      //{/* </div> */}\n    );\n  }\n\n  return (\n    <div className=\" inline-block  rounded-3xl  hover:bg-blue-400  \">\n      <Link to={data.fields.slug} className=\" \">\n        {/* <div className=\"relative  rounded-3xl  hover:bg-red-400  pb-1/2\"> */}\n        <div className=\"relative p-1/4\">\n          <div className=\"absolute  z-10  opacity-0 hover:opacity-100 inset-0  w-full h-full  \">\n            {/* <div className=\"bg-slate-400 w-full opacity-60 absolute bottom-0 p-12\"></div> */}\n            <div className=\" absolute text-xl rounded-b-3xl text-txt-principal text-center font-bold inset-x-0 bottom-0 p-12 gradiente-principal \">\n              {/* <h1></h1> <h2></h2>*/}\n              {data.frontmatter.title}\n            </div>\n          </div>\n          {imagen}\n        </div>\n\n        {/* <h3>{data.frontmatter.date}</h3> */}\n        {/* <p className=\"mt-2 text-sm text-gray-300\">{data.excerpt}</p> */}\n      </Link>\n    </div>\n  );\n};\n\nexport default CardPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CardPreview from \"../components/cardpreview\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n  // const tagHeader = `${totalCount} post${\n  //   totalCount === 1 ? \"\" : \"s\"\n  // } tagged with \"${tag}\"`\n\n  return (\n    <Layout titulo={tag}>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <CardPreview data={node} key={node.fields.slug} />\n          ))}\n        </div>\n\n        {/* <Link to=\"/tags\">All tags</Link> */}\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            layout\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","data","imagen","undefined","frontmatter","image","G","className","childImageSharp","gatsbyImageData","alt","title","Link","to","fields","slug","pageContext","tag","edges","allMarkdownRemark","titulo","map","node","key"],"sourceRoot":""}